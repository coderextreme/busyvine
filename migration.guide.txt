$ ng update @angular/core
Using package manager: 'npm'
Collecting installed dependencies...
Found 46 dependencies.
Fetching dependency metadata from registry...
    Updating package.json with dependency @angular/language-service @ "10.1.0" (was "8.2.14")...
    Updating package.json with dependency @angular/animations @ "10.1.0" (was "8.2.14")...
    Updating package.json with dependency @angular/common @ "10.1.0" (was "8.2.14")...
    Updating package.json with dependency @angular/core @ "10.1.0" (was "8.2.14")...
    Updating package.json with dependency @angular/forms @ "10.1.0" (was "8.2.14")...
    Updating package.json with dependency @angular/platform-browser @ "10.1.0" (was "8.2.14")...
    Updating package.json with dependency @angular/platform-browser-dynamic @ "10.1.0" (was "8.2.14")...
    Updating package.json with dependency @angular/platform-server @ "10.1.0" (was "8.2.14")...
    Updating package.json with dependency @angular/router @ "10.1.0" (was "8.2.14")...
UPDATE package.json (1866 bytes)
- Installing packages...
ΓêÜ Packages installed successfully.
** Executing migrations of package '@angular/core' **

> Static flag migration.
  Removes the `static` flag from dynamic queries.
  As of Angular 9, the "static" flag defaults to false and is no longer required for your view and content queries.
  Read more about this here: https://v9.angular.io/guide/migration-dynamic-flag
  Migration completed.

> Renderer to Renderer2 migration.
  As of Angular 9, the Renderer class is no longer available.
  Renderer2 should be used instead.
  Read more about this here: https://v9.angular.io/guide/migration-renderer
  Migration completed.

> Undecorated classes with DI migration.
  As of Angular 9, it is no longer supported to use Angular DI on a class that does not have an Angular decorator.
  Read more about this here: https://v9.angular.io/guide/migration-undecorated-classes
  Migration completed.

> Missing @Injectable and incomplete provider definition migration.
  As of Angular 9, enforcement of @Injectable decorators for DI is a bit stricter and incomplete provider definitions behave differently.
  Read more about this here: https://v9.angular.io/guide/migration-injectable
  Migration completed.

> ModuleWithProviders migration.
  As of Angular 10, the ModuleWithProviders type requires a generic.
  This migration adds the generic where it is missing.
  Read more about this here: https://v10.angular.io/guide/migration-module-with-providers
  Migration completed.

> Undecorated classes with Angular features migration.
  In version 10, classes that use Angular features and do not have an Angular decorator are no longer supported.
  Read more about this here: https://v10.angular.io/guide/migration-undecorated-classes
  Migration completed.

